package com.jhw.swing.material.components.searchfield;

import com.jhw.swing.material.components.button._MaterialButtonIconTransparent;
import com.jhw.swing.material.components.container.panel._MaterialPanel;
import com.jhw.swing.material.components.container.panel._PanelTransparent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import org.jdesktop.swingx.JXTextField;
import com.jhw.swing.util.Utils;
import com.jhw.swing.material.standars.MaterialFontRoboto;
import com.jhw.swing.material.standars.MaterialIcons;

/**
 *
 * @author Jesus Hernandez Barrios (jhernandezb96@gmail.com)
 */
public class _MaterialSearchField extends _PanelTransparent {

    private ActionListener searchAction = new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            System.out.println("Accion buscar no implementada.");
        }
    };

    private int maxLength = 50;

    public _MaterialSearchField() {
        initComponents();
        addListeners();
        personalize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//
    private void initComponents() {

        panelBackground = new com.jhw.swing.material.components.container.panel._MaterialPanel();
        buttonSearch = new com.jhw.swing.material.components.button._MaterialButtonIconTransparent();
        searchField = new org.jdesktop.swingx.JXTextField();

        panelBackground.setBackground(new java.awt.Color(255, 255, 255));
        panelBackground.setBorderRadius(12);

        buttonSearch.setText("_MaterialIconButtonTranspRect1");

        searchField.setPrompt("Buscar...");

        javax.swing.GroupLayout panelBackgroundLayout = new javax.swing.GroupLayout(panelBackground);
        panelBackground.setLayout(panelBackgroundLayout);
        panelBackgroundLayout.setHorizontalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        panelBackgroundLayout.setVerticalGroup(
            panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBackgroundLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(panelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//:variables
    private com.jhw.swing.material.components.button._MaterialButtonIconTransparent buttonSearch;
    private com.jhw.swing.material.components.container.panel._MaterialPanel panelBackground;
    private org.jdesktop.swingx.JXTextField searchField;
    // End of variables declaration//GEN-END:variables

    private void personalize() {
        buttonSearch.setIcon(MaterialIcons.SEARCH.deriveIcon(panelBackground.getForeground()).deriveIcon(20f));
        searchField.setBorder(null);
        searchField.setFont(MaterialFontRoboto.REGULAR.deriveFont(16f));
        searchField.setForeground(panelBackground.getForeground());
    }

    private void addListeners() {
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                onSearchFieldKeyTyped(e);
            }

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onSearchFieldKeyReleased(evt);
            }
        });

        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAction.actionPerformed(null);
            }
        });
    }

    private void onSearchFieldKeyTyped(KeyEvent e) {
        validateLength(e);
    }

    private void onSearchFieldKeyReleased(KeyEvent evt) {
        clear(evt);
    }

    private void validateLength(KeyEvent evt) {
        if (getText().length() + 1 > maxLength) {
            Utils.beep();
            evt.consume();
        }
    }

    public void setHint(String hint) {
        searchField.setPrompt(hint);
    }

    public String getHint() {
        return searchField.getPrompt();
    }

    public void clear(KeyEvent evt) {
        if (evt.getKeyChar() == KeyEvent.VK_ESCAPE) {
            searchField.setText("");
        }
        searchAction.actionPerformed(null);
        searchField.requestFocusInWindow();
    }

    public int getMaxLength() {
        return maxLength;
    }

    public void setMaxLength(int maxLength) {
        this.maxLength = maxLength;
    }

    public void setSearchActionListener(ActionListener searchAction) {
        this.searchAction = searchAction;
        this.searchAction.actionPerformed(null);//activa la accion de busqueda
    }

    public String getText() {
        return searchField.getText();
    }

    public ActionListener getSearchAction() {
        return searchAction;
    }

    public _MaterialButtonIconTransparent getButtonSearch() {
        return buttonSearch;
    }

    public _MaterialPanel getPanelBackground() {
        return panelBackground;
    }

    public JXTextField getSearchField() {
        return searchField;
    }

    @Override
    public void setEnabled(boolean enabled) {
        this.searchField.setEnabled(enabled);
        this.buttonSearch.setEnabled(enabled);
        super.setEnabled(enabled);
    }
}
